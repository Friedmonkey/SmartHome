@inject SmartHomeState smartHomeState;
@inject NavigationManager navManager;
@inject ISmartHomeService smartHomeService;
@inject ISnackbar snackBar;

@* 
    use "@inherits SmartHomeGuidPage" at the top of your page
    when the page is releated to a specific smarthome (pretty much all pages)

    what this does, this captures the {SmartGuid} page varible
    it then tries to convert it and sets the state for other components to use

    ApiService auto injects it into any SmartHomeRequest, so you dont have to pass it



    if this is not working make sure to call await base.OnInitializedAsync();
    in your own OnInitializedAsync method, meaning this runs first loading it for you!
*@

@code {
    [Parameter]
    public string? SmartGuid { get; set; } //should come from url/@page

    protected override async Task OnInitializedAsync()
    {
        if (Guid.TryParse(SmartGuid, out Guid smartHomeId))
        {
            if (smartHomeState.SelectedSmartHomeId == smartHomeId)
                return; //we do not need to get the same one.

            var request = new GuidRequest((Guid)smartHomeId);
            var smartHomeResponse = await smartHomeService.GetSmartHomeById(request);
#if DEBUG
            smartHomeResponse.Show(snackBar, "Smarthome retrived!"); //let devs know we made api call
#endif
            smartHomeState.SetSelectedSmartHome(smartHomeResponse.smartHome);
        }
        else
        {
            smartHomeState.SetSelectedSmartHome(null);
            navManager.NavigateTo("/smarthome");
        }
    }
}
