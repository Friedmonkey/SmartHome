@inherits LayoutComponentBase;
@inject ProfileService profileService;
@inject SelectedSmartHomeService smartHomeState;
@inject ApiService apiService;
@inject ISnackbar snackBar;
@inject NavigationManager navManager;

<MudThemeProvider @bind-IsDarkMode="@isDarkMode" Theme="CustomTheme" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />


<style>
    .menu-wrapper {
        white-space: nowrap;
    }
</style>
<CascadingValue Name="pref" Value="preferences">
<CascadingValue Name="CurrentSmartHome" Value="CurrentSmartHome">
    <MudLayout>
        <MudAppBar Elevation="0">
            @if (CurrentSmartHome is not null)
            {
                <MudText>@CurrentSmartHome.Name</MudText>
            }
            <MudSpacer />
            <ThemeToggle />
            <AuthorizeView>
                <Authorized>
                    <MudMenu AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter">
                        <ActivatorContent>
                            <Avatar Username="@context.User.GetUserName()" ProfilePicture="@context.User.GetProfilePicture()" />
                            <MudButton>@context.User.GetUserName()</MudButton>
                        </ActivatorContent>
                        <ChildContent>
                            <MudMenuItem Label="Profile" />
                            <MudMenuItem Label="About" />
                            <MudMenuItem Label="Logout" OnClick="() => NavMenu.Logout(navManager)" />
                        </ChildContent>
                    </MudMenu>
                </Authorized>
                <NotAuthorized>
                    <MudAvatar>?</MudAvatar>
                    <MudButton Style="width:7%;" OnClick="() => NavMenu.Login(navManager)">LOGIN</MudButton>
                </NotAuthorized>
            </AuthorizeView>
            <MudIconButton Icon="@Icons.Custom.Brands.MudBlazor" Color="Color.Inherit" Href="https://mudblazor.com/"/>
            <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Href="https://github.com/MudBlazor/MudBlazor/"/>
        </MudAppBar>
        <SideMenu />
        <MudMainContent>
            <div class="pa-4">
                @Body
            </div>
        </MudMainContent>
    </MudLayout>
</CascadingValue>
</CascadingValue>

@code{
    private bool isDarkMode;
    private Preferences preferences = new();
    public SmartHomeModel? CurrentSmartHome { get; private set; } = null;
    protected override async Task OnParametersSetAsync()
    {
        Guid? guid = smartHomeState.GetCurrentSmartHomeGuid();
        if (guid is not null)
        {
            var smartHome = await apiService.GetSmartHomeById(new((Guid)guid!));
            if (smartHome.EnsureSuccess(snackBar))
            {
                CurrentSmartHome = smartHome.smartHome;
                return;
            }
        }
        CurrentSmartHome = null;
    }

    protected override async Task OnInitializedAsync()
    {
        profileService.OnChange += ProfileServiceOnOnChange;
        preferences = await profileService.GetPreferences();
        isDarkMode = preferences.DarkMode;
    }
    private void ProfileServiceOnOnChange(Preferences newPreferences)
    {
        preferences = newPreferences;
        isDarkMode = newPreferences.DarkMode;
        StateHasChanged();
    }

    public void Dispose()
    {
        profileService.OnChange -= ProfileServiceOnOnChange;
    }

    MudTheme CustomTheme = new MudTheme()
    {
        PaletteLight = new PaletteLight()
        {
            AppbarBackground = new MudBlazor.Utilities.MudColor("#f8f9faff"),
            DrawerBackground = new MudBlazor.Utilities.MudColor("#ebebebff"),
            Background = new MudBlazor.Utilities.MudColor("#f8f9fa"),
            Primary = new MudBlazor.Utilities.MudColor(Colors.Blue.Default),
            AppbarText = new MudBlazor.Utilities.MudColor("#424242ff"),
            Divider = new MudBlazor.Utilities.MudColor("#424242ff"),
        },
        PaletteDark = new PaletteDark()
        {
            AppbarBackground = new MudBlazor.Utilities.MudColor("#27272fcc"),
            Primary = new MudBlazor.Utilities.MudColor(Colors.Blue.Darken2),
            Divider = new MudBlazor.Utilities.MudColor("#bebec0"),
        }
    };

}
