@inject NavigationManager navManager;
@inject ISmartHomeService smartHomeService;

<MudDrawer Breakpoint="Breakpoint.Md"
Elevation="2"
@bind-Open="@_open"
Style="overflow:hidden"
Variant="@DrawerVariant.Mini">

    <MudDrawerHeader Class="align-center d-flex align-center pa-0">
        <MudIconButton Color="@Color.Primary"
        Icon="@Icons.Material.Rounded.Menu"
        Size="Size.Large"
        OnClick="@OpenSideMenu" />
        @if (_open && CurrentSmartHome is not null)
        {
            <div class="d-flex flex-row">
                <MudIconButton Icon="@Icons.Material.Rounded.Home" OnClick="@(() => navManager.NavigateTo("/smarthome"))"/>
                @* <div class="d-flex flex-column"> *@
                @* <MudText>@CurrentSmartHome.Name</MudText> *@
                @*                     <MudSelect @bind-Value="CurrentSmartHome" Dense="true">

                    </MudSelect> *@
                @* </div> *@
                <MudAutocomplete ValueChanged="OnValueChanged" Value="CurrentSmartHome" T="SmartHomeModel" ToStringFunc="@(shm => shm.Name)" Label="Selected SmartHome" SearchFunc="@Search" ShowProgressIndicator="true" />
            </div>
        }

    </MudDrawerHeader>

    <NavMenu/>

    <MudSpacer />
    @if (_open)
    {
        <div class="d-flex">
            <MudSpacer />
            <MudImage Alt="Logo" Src="logo.png" Width="100" Class="mb-4" />
            <MudSpacer />
        </div>
    }
    else
    {
        <MudText Typo="Typo.overline" Align="Align.Center">SH</MudText>
    }
</MudDrawer>

@code {
    [CascadingParameter(Name = "CurrentSmartHome")]
    public SmartHomeModel? CurrentSmartHome { get; set; }

    public async Task<IEnumerable<SmartHomeModel>> Search(string value, CancellationToken token)
    {
        var homes = await smartHomeService.GetJoinedSmartHomes(new());
        homes.EnforceSuccess();
        return homes.homes;
    }

    private void OnValueChanged(SmartHomeModel newSelected)
    {
        CurrentSmartHome = newSelected;
        navManager.NavigateTo($"/smarthome/{newSelected.Id}/overview");
        StateHasChanged();
    }

    bool _open = false;

    void OpenSideMenu()
    {
        _open = !_open;
    }
}