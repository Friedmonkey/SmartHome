<MudDrawer Breakpoint="Breakpoint.Md"
Class="side-menu"
Elevation="2"
Open="_open"
Style="overflow:hidden"
Variant="@DrawerVariant.Mini">

    <MudDrawerHeader Class="align-center d-flex align-center pa-0">
        <MudIconButton Color="@Color.Primary"
        Icon="@Icons.Material.Rounded.Menu"
        Size="Size.Large"
        OnClick="@OpenSideMenu" />
        @if (_open && CurrentSmartHome is not null)
        {
            <div class="d-flex flex-row">
                <MudIcon Icon="@Icons.Material.Rounded.Home"/>
                <MudText>@CurrentSmartHome.Name</MudText>
            </div>
        }

    </MudDrawerHeader>

    <NavMenu @ref="navMenu"/>

    <MudSpacer />
    @if (_open)
    {
        <div class="d-flex">
            <MudSpacer />
            <MudImage Alt="Logo" Src="logo.png" Width="100" Class="mb-4" />
            <MudSpacer />
        </div>
    }
    else
    {
        <MudText Typo="Typo.overline" Align="Align.Center">BB</MudText>
    }
</MudDrawer>

@code {
    [CascadingParameter(Name = "CurrentSmartHome")]
    public SmartHomeModel? CurrentSmartHome { get; set; }

    bool _open = false;

    void OpenSideMenu()
    {
        _open = !_open;
    }

    NavMenu navMenu;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //Zet de NavMenu in de static NavigaationController Zodat later classen in de navigatie kunnen worden aangeroepen
        NavigationController.navigationMenu = navMenu;
    }

}