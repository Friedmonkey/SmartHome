@using SmartHome.Common.Models.Configs;
@inject IDeviceService deviceService;

<MudPaper Class="d-flex flex-row flex-grow-0 gap-0 align-center Container" Style="min-width: 370px; background-color: lightslategray; width: 45%" Elevation="0">
    <MudPaper Class="d-flex flex-column align-center flex-grow-1 gap-4" Style="background-color: transparent; box-shadow: none" Elevation="0">
        <MudImage Width="150" Height="150" Src="Afbeeldingen/wasmachine.png" Style="margin: 10px" Elevation="25" Class="ObjectPosition.Center" />
        <MudText Style="font-size: 250%" Typo="Typo.h3" Class="Lamp-Name">@_WasMachineName</MudText>
    </MudPaper>
    <MudPaper Class="d-flex flex-column align-center flex-grow-1 gap-1" Style="background-color: transparent" Elevation="0">
        <MudSwitch @bind-Value="@_WasConfig.Ingeschakeld" Label="@Status" Color="Color.Dark" UncheckedColor="Color.Warning" />
        <MudSelect @bind-Value="@_WasConfig.Programma" Label="Programma" Variant="Variant.Outlined">
            <MudSelectItem Value="@("Gekleurde was")" />
            <MudSelectItem Value="@("Katoen")" />
            <MudSelectItem Value="@("Spijker Broeken")" />
        </MudSelect>
        <MudButton Variant="Variant.Filled" Color="Color.Primary">Starten</MudButton>
    </MudPaper>
</MudPaper>


@code {
    string Status = "Uitgeschakeld";

    private async Task UpdateConfig(bool CheckIngeschakeld)
    {
        _WasConfig.Ingeschakeld = CheckIngeschakeld;
        var Response = await deviceService.UpdateDeviceConfig(new(_Id, JsonConvert.SerializeObject(_WasConfig)));
        UpdateStatus();
    }

    private void UpdateStatus()
    {
        if (_WasConfig.Ingeschakeld)
        {
            Status = "Ingeschakeld";
        }
        else
        {
            Status = "Uitgeschakeld";
        }
    }

    private Guid _Id = Guid.Empty;

    [Parameter]
    public Guid Id
    {
        set
        {
            _Id = value;
        }
    }

    private WasmachineConfig _WasConfig;

    [Parameter]
    public string Config
    {
        get
        {
            return JsonConvert.SerializeObject(_WasConfig);
        }

        set
        {
            _WasConfig = JsonConvert.DeserializeObject<WasmachineConfig>(value);
        }
    }

    private string _WasMachineName = "Unknown";

    [Parameter]
    public string Name
    {
        get
        {
            return _WasMachineName;
        }

        set
        {
            _WasMachineName = value;
        }
    }
}
