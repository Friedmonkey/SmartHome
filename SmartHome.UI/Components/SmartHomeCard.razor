@inject ISmartHomeService smartHomeService;
@inject NavigationManager navManager;
@inject MemoryCacheService cacheService;
@inject ISnackbar snackBar;

<MudCard Elevation="11">
    <MudCardHeader>
        <MudIcon Size="Size.Large" Icon="@Icons.Material.Filled.Home" />
    </MudCardHeader>
    <MudCardContent>
        <MudText>@Home.Name</MudText>
        @if (IsInvite)
        {
            <MudButton OnClick="AcceptInvite" Color="Color.Success">Accept invite</MudButton>
        }
        else
        { 
            <MudButton OnClick="OpenHome">Open home</MudButton>
        }
    </MudCardContent>
</MudCard>

@code {
    [Parameter]
    public bool IsInvite { get; set; }

    [Parameter]
    public SmartHomeModel Home { get; set; }

    public async Task AcceptInvite()
    {
        await smartHomeService.AcceptSmartHomeInvite(new(Home.Id));
    }
    public void OpenHome()
    {
        if (Home is null)
        {
            snackBar.Add("Home was null", Severity.Error);
            return;
        }

        //inject the currect home into the cache so we basicly preload it since we already know what it will get
        //its just optimization for here, normally do not do this lol
        string cacheKey = cacheService.HashKey(SharedConfig.Urls.SmartHome.GetByIDUrl,
            new
            {
                cacheKey = new { id = Home.Id },
                authenticated = true
            }
        );
        cacheService.Set(cacheKey, new SmartHomeResponse(Home));
        navManager.NavigateTo($"/smarthome/{Home.Id}/overview");
    }
}
