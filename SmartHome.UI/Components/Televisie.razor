@using SmartHome.Common.Models.Configs;
@inject IDeviceService deviceService;

<MudPaper Class="d-flex flex-row flex-grow-0 gap-0 align-center Container" Style="min-width: 370px; background-color: lightslategray; width: 45%" Elevation="0">
    <MudPaper Class="d-flex flex-column align-center flex-grow-1 gap-4" Style="background-color: transparent; box-shadow: none" Elevation="0">
        <MudImage Width="150" Height="150" Src="Afbeeldingen/televisie.png" Style="margin: 10px" Elevation="25" Class="ObjectPosition.Center" />
        <MudText Style="font-size: 250%" Typo="Typo.h3" Class="Lamp-Name">@_tvName</MudText>
    </MudPaper>
    <MudPaper Class="d-flex flex-column align-center flex-grow-1 gap-1" Style="background-color: transparent" Elevation="0">
        <MudSwitch @bind-Value="@_televisieConfig.Ingeschakeld" @onclick="@(e => UpdateConfig(_televisieConfig.Ingeschakeld))" Label="@Status" Color="Color.Dark" UncheckedColor="Color.Warning" />
        <MudSelect @bind-Value="@_televisieConfig.Zender" @onchange="@(e => UpdateConfig(_televisieConfig.Ingeschakeld))" Label="Zender" Variant="Variant.Outlined">
            <MudSelectItem Value="@("NPO 1")" />
            <MudSelectItem Value="@("NPO 2")" />
            <MudSelectItem Value="@("NPO 3")" />
            <MudSelectItem Value="@("RTL 4")" />
            <MudSelectItem Value="@("RTL 5")" />
            <MudSelectItem Value="@("SBS 6")" />
            <MudSelectItem Value="@("RTL 7")" />
            <MudSelectItem Value="@("Veronica")" />
            <MudSelectItem Value="@("Net 5")" />
            <MudSelectItem Value="@("RTL 8")" />
        </MudSelect>
        <MudButton Variant="Variant.Filled" Color="Color.Primary">Zappen</MudButton>
    </MudPaper>
</MudPaper>

@code {
    string Status = "Uitgeschakeld";

    private async Task UpdateConfig(bool CheckIngeschakeld)
    {
        _televisieConfig.Ingeschakeld = CheckIngeschakeld;
        var Response = await deviceService.UpdateDeviceConfig(new(_Id, JsonConvert.SerializeObject(_televisieConfig)));
        UpdateStatus();
    }

    private void UpdateStatus()
    {
        if (_televisieConfig.Ingeschakeld)
        {
            Status = "Ingeschakeld";
        }
        else
        {
            Status = "Uitgeschakeld";
        }
    }

    private TelevisieConfig _televisieConfig;

    [Parameter]
    public string Config
    {
        get
        {
            return JsonConvert.SerializeObject(_televisieConfig);
        }

        set
        {
            _televisieConfig = JsonConvert.DeserializeObject<TelevisieConfig>(value);
        }
    }

    private Guid _Id = Guid.Empty;

    [Parameter]
    public Guid Id
    {
        set
        {
            _Id = value;
        }
    }

    private string _tvName = "Unknown";

    [Parameter]
    public string Name
    {
        get
        {
            return _tvName;
        }

        set
        {
            _tvName = value;
        }
    }
}
