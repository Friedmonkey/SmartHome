@inject IDeviceService deviceSerice;
@inject ISnackbar snackBar;
@inject MemoryCacheService cacheService;

@if (Device is not null)
{
    <MudPaper Class="d-flex flex-row flex-grow-0 gap-0 align-center Container" Style="min-width: 370px; width: 45%" Elevation="1">
        <MudPaper Class="d-flex flex-column align-center flex-grow-1 gap-4" Elevation="0">
            <MudImage Width="150" Height="150" Src="@Device.GetImage()" Style="margin: 10px" Elevation="25" Class="ObjectPosition.Center" />
            <MudText Style="font-size: 250%" Typo="Typo.h3" Class="Lamp-Name">@Device.Name</MudText>
        </MudPaper>
        <MudPaper Class="d-flex flex-column align-center flex-grow-1 gap-1" Elevation="0">
            @switch (Device.Type)
            {
                case DeviceType.Lamp:
                    <LampSettings Device="@Device" />
                    break;
                case DeviceType.Televisie:
                    <TelevisonSettings Device="@Device" />
                    break;
                case DeviceType.Wasmachine:
                    <WashingMachineSettings Device="@Device" />
                    break;
                case DeviceType.Router:
                    <Wifi_RouterSettings Device="@Device" />
                    break;
            }
        </MudPaper>
        @if (DeviceSaveable){
            <MudPaper>
                <MudButton OnClick="Save">Save</MudButton>
            </MudPaper>
        }
    </MudPaper>
}

@code {
    [Parameter]
    public Device? Device { get; set; }
    [Parameter]
    public bool DeviceSaveable { get; set; } = true;

    protected override void OnInitialized()
    {
        if (Device is null)
            throw new ArgumentException();

        Device.LoadDeviceConfig();
        base.OnInitialized();
    }

    private async Task Save()
    {
        if (Device is null)
            throw new ArgumentException();

        Device.SaveDeviceConfig();
        var result = await deviceSerice.UpdateDevice(new(Device));
        if (result.WasSuccessAndShow(snackBar, "Device updated!", Severity.Success))
            cacheService.RemoveCacheWithPrimary(SharedConfig.Urls.Device.GetAllDevices);
    }
}
