@using SmartHome.UI.Components;
@using SmartHome.Common.Api;
@using SmartHome.Common.Models.Entities;
@inject IDeviceService deviceService;
@inject ISnackbar snackBar;
@page "/Overzicht"

@foreach (Room room in roomList)
{
    List<Device> list = deviceList.Where(d => d.RoomId == room.Id).ToList();
    //Ga door all rooms in de roomLists
    @if (list.Count > 0)
    {
        //Zet room name op het scherm
        <h3 style='text-align: center'>@room.Name</h3>
        <MudDivider DividerType='DividerType.Middle' Class='my-6' />
        <MudPaper Class="d-flex flex-wrap align-center gap-12 Apparaaat-Container" Elevation="0">
            @for (int d = 0; d < list.Count; d++)
            {
                //Zet de apparaten op het scherm bij de room
                switch (list[d].Type)
                {
                    case "Lamp":
                        <Lamp Id="@list[d].Id" Name="@list[d].Name" config="@list[d].JsonObjectConfig"></Lamp>
                        break;
                    case "Televisie":
                        <Televisie Name="@list[d].Name" Config="@list[d].JsonObjectConfig"></Televisie>
                        break;
                    case "Wasmachine":
                        <Wasmachine Name="@list[d].Name" Config="@list[d].JsonObjectConfig"></Wasmachine>
                        break;
                    case "Router":
                        <Wifi_Router Id="@list[d].Id" Name="@list[d].Name" Config="@list[d].JsonObjectConfig"></Wifi_Router>
                        break;
                }
            }
        </MudPaper>
    }
}

<style>

    .Apparaaat-Container {
        margin-left: 4%;
        margin-bottom: 35px;
        background-color: transparent;
    }

    .Overzicht {
        background-color: green;
        width: 100%;
        height: 100%;
    }
</style>

@code {
    bool DataLoaded = false;

    List<Device> deviceList = new List<Device>();
    List<Room> roomList = new List<Room>();
    HttpClient httpClient = new HttpClient();

    protected override async Task OnInitializedAsync()
    {
        //Haal de Kamers en apparten op uit de DataBase met de APi
        await GetDevices();
        await GetRooms();

    }

    private async Task GetDevices()
    {
        var Devices = await deviceService.GetDevicesByHouseId(new("1"));
        if (Devices.WasSuccess())
        {
            //Zet de apparaten in een lijst
            deviceList = Devices.Devices;
        }
    }

    protected async Task GetRooms()
    {

        var Rooms = await deviceService.GetRoomsByHouseId(new("1"));
        if (Rooms.WasSuccess())
        {
            //Zet de kamers in een lijst
            roomList = Rooms.Rooms.ToList();
            StateHasChanged();
        }
    }
}
