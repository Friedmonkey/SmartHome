@page "/smarthome/{SmartGuid}/admin/logs"
@inherits SmartHomeGuidPage
@inject ILogService logService;
@inject ISnackbar snackBar;

@{
    List<Log> _LogList = new List<Log>();
    _LogList = logList;
}

<MudPaper Class="rounded-lg pa-1 " Elevation="3" Style="width: 100%; height: calc(100vh - var(--mud-appbar-height) - 45px);">
    @foreach (Log log in _LogList)
    {
        string TextColor = Colors.Shades.Black;

        //Zet de text kleur naar de bij behorende type
        switch (log.Type)
        {
            case LogType.None:
                TextColor = Colors.Shades.Black;
                break;
            case LogType.Error:
                TextColor = Colors.Red.Default;
                break;
            case LogType.Routine:
                TextColor = Colors.Indigo.Default;
                break;
            case LogType.Action:
                TextColor = Colors.Shades.Black;
                break;
        }

        <MudText Typo="Typo.subtitle2" Class="ms-3 mt-1" Style="@($"color:{TextColor};")">
            @log.CreateOn.Day-@log.CreateOn.Month-@log.CreateOn.Year
            @log.CreateOn.Hour:@log.CreateOn.Minute:@log.CreateOn.Second >
            @log.Action>
        </MudText>
    }
</MudPaper>

@code {
    List<Log> logList = new List<Log>();

    protected override async Task OnInitializedAsync()
    {
        //Haal de logs op ui de database
        var result = await logService.GetAllLogs(new());

        if (result.EnsureSuccess(snackBar))
        {
            logList = result.Logs;
            StateHasChanged();
        }
    }
}
