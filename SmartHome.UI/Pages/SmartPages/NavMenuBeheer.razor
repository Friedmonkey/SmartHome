@page "/smarthome/{SmartGuid}/beheer"
@using SmartHome.UI.Pages.Beheer;
@using SmartHome.Common.Models.Entities;
@inject IDeviceService deviceService;
@inject SmartHomeState smartHomeState;
@inject NavigationManager navManager;

<MudTabs>
    <MudTabPanel @onclick="@(e => OpenPage("Devices"))" Icon="@Icons.Material.Filled.Devices" Text="Devices" />
    <MudTabPanel @onclick="@(e => OpenPage("Rooms"))" Icon="@Icons.Material.Filled.SensorDoor" Text="Rooms" BadgeColor="Color.Success" />
    <MudTabPanel @onclick="@(e => OpenPage("Devices"))" Icon="@Icons.Material.Filled.AccessTime" Text="Routine" />
</MudTabs>

@switch (pageToOpen)
{
    //Open het juiste tabje van de beheer omgeving
    case "Devices":
        <DeviceBeheer SmartHomeId="Guid.Parse(SmartGuid)"></DeviceBeheer>
        break;
    case "Rooms":
        <RoomBeheer SmartHomeId="Guid.Parse(SmartGuid)"></RoomBeheer>
        break;
}

@code {
    [Parameter]
    public string? SmartGuid { get; set; }

    private string pageToOpen = "Devices";
    private Guid SmartHomeId;

    private void OpenPage(string page)
    {
        //Refresh de html met de nieuwe pagina
        pageToOpen = page;
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        //Hall de home guid uit de database
        if (SmartGuid is null)
        {
            smartHomeState.SetSelectedSmartHome(null);
        }
        else
        {
            if (!Guid.TryParse(SmartGuid, out SmartHomeId))
                navManager.NavigateTo("/smarthome");
            smartHomeState.SetSelectedSmartHome(SmartHomeId);
        }
    }
}
