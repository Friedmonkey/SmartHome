@page "/person"

@using SmartHome.Common.Api
@inject IPersonTestingService personService;
@inject ISnackbar snackBar;

<AuthorizeView>
    <MudText>you are logged in!!!</MudText>
</AuthorizeView>

<h3>PersonTestingPage</h3>
<MudTextField @bind-Value="name">enter name</MudTextField>
<MudTextField @bind-Value="age">enter age</MudTextField>

<MudButton OnClick="AddPerson" Color="Color.Primary">Add person</MudButton>
<MudButton OnClick="GetPersonByName" Color="Color.Primary">Get by name</MudButton>
<MudButton OnClick="GetPersonByAge" Color="Color.Primary">Get by age</MudButton>

@code 
{
    private string name = string.Empty;
    private int age = 0;

    public async Task AddPerson()
    {
        var person = new Person(name, age);
        try
        {
            var response = await personService.AddPerson(new(person));
            if (response.EnsureSuccess(snackBar))
            {
                snackBar.Add("Person was added!", Severity.Success);
                name = string.Empty;
                age = 0;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }
    }

    public async Task GetPersonByName()
    {
        var response = await personService.GetPersonByName(new(name));
        if (response.EnsureSuccess(snackBar))
        { 
            snackBar.Add("Person retrived!", Severity.Success);
            name = response.person.Name;
            age = response.person.Age;
        }
    }

    public async Task GetPersonByAge()
    {
        var response = await personService.GetPersonByAge(new(age));
        if (response.EnsureSuccess(snackBar))
        {
            snackBar.Add("Person retrived!", Severity.Success);
            name = response.person.Name;
            age = response.person.Age;
        }
    }
}
